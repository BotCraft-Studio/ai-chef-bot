import io
from PIL import Image
from telegram import Update
from telegram.ext import ContextTypes
from app import storage
from app.providers.openai_vision import OpenAIVision

async def on_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo = update.message.photo[-1]
    file = await context.bot.get_file(photo.file_id)
    bio = io.BytesIO()
    await file.download(out=bio)
    img = Image.open(io.BytesIO(bio.getvalue())).convert("RGB")

    # —É–∂–º—ë–º —á—Ç–æ–±—ã –Ω–µ –≥—Ä—É–∑–∏—Ç—å —Å–µ—Ç—å
    out = io.BytesIO()
    img.thumbnail((1280, 1280))
    img.save(out, format="JPEG", quality=85)

    ai = OpenAIVision()
    ingredients = await ai.parse_ingredients(out.getvalue())
    if not ingredients:
        return await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")

    storage.add_ingredients(update.effective_user.id, ingredients)
    reply = await ai.recipe_with_macros(ingredients)
    await update.message.reply_text("üìã –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: " + ", ".join(ingredients) + "\n\n" + reply)
