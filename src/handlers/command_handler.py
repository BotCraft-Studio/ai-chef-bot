"""
–ú–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥, –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from telegram import Update
from telegram.ext import ContextTypes

import storage
from keyboards import premium_menu, profile_menu, main_menu


async def start_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    text = """
üç≥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI-Chef! üë®‚Äçüç≥

–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —à–µ—Ñ-–ø–æ–≤–∞—Ä —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º! 

‚ú® –ß—Ç–æ —è —É–º–µ—é:

‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
‚Ä¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ç–æ—á–Ω–æ–µ –ö–ë–ñ–£ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ—Ä—Ü–∏–∏
‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–µ–∑–æ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–Ω—è
‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å –¥–æ—Å—Ç–∏–≥–∞—Ç—å –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –ø–∏—Ç–∞–Ω–∏—è

üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    await update.message.reply_text(text, reply_markup=main_menu())


async def help_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    text = """
‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è AI-Chef üç≥

‚ú® 3 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞:
1. üì∏ –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–ª–∏ üìù –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
2. üç≥ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç —Å —Ç–æ—á–Ω—ã–º —Ä–∞—Å—á–µ—Ç–æ–º –ö–ë–ñ–£
3. ‚≠êÔ∏è –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ä–µ—Ü–µ–ø—Ç—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ

üïí –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:
 /daily 09:00 on` ‚Äî –ø–æ–ª—É—á–∞–π—Ç–µ —Ä–µ—Ü–µ–ø—Ç –≤ 9 —É—Ç—Ä–∞
 /daily off` ‚Äî –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É

üìä –û —Ä–∞—Å—á–µ—Ç–∞—Ö –ö–ë–ñ–£:
‚Ä¢ –ó–Ω–∞—á–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–µ, –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ—Ä—Ü–∏–π
‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
‚Ä¢ –î–ª—è —Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —É–∫–∞–∂–∏—Ç–µ –≤–µ—Å –ø—Ä–æ–¥—É–∫—Ç–æ–≤
–≤
üéØ –°–æ–≤–µ—Ç—ã:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ üì∏ —Ñ–æ—Ç–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–≤–æ–¥–∞
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ üéØ —Ü–µ–ª—å –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ üç≥ –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    """
    await update.message.reply_text(text)


async def list_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    rows = storage.list_ingredients(update.effective_user.id)
    if not rows:
        return await update.message.reply_text(
            "üì¶ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –Ω–µ—Ç.\n\n"
            "‚ú® –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é!"
        )
    text = "–í–∞—à–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n" + "\n".join(f"{i}. {n}" for i, n, _ in rows[:20])
    await update.message.reply_text(text)

    return None


async def del_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    storage.clear_ingredients(update.effective_user.id)
    await update.message.reply_text("–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω ‚úÖ")


async def daily_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args
    time = None
    enabled = None
    if len(args) == 1:
        enabled = 1 if args[0].lower() == "on" else 0
    elif len(args) == 2:
        time = args[0]
        enabled = 1 if args[1].lower() == "on" else 0
    else:
        return await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /daily 09:00 on|off")

    if time:
        storage.upsert_user(update.effective_user.id, daily_time=time)
    if enabled is not None:
        storage.upsert_user(update.effective_user.id, enabled=enabled)
    await update.message.reply_text("–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ ‚úÖ" if enabled else "–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ üõë")

    return None


async def premium_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üåü <b>Premium —Ä–µ—Ü–µ–ø—Ç—ã PRO</b>\n\n"
        "–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º:\n"
        "‚Ä¢ –ë–æ–ª–µ–µ 1000 –ø—Ä–µ–º–∏—É–º —Ä–µ—Ü–µ–ø—Ç–æ–≤\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=premium_menu(),
        parse_mode='HTML'
    )


async def profile_cmd(update: Update, _context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    ingredients = storage.list_ingredients(user_id)
    ingredients_count = len(ingredients)
    last_three = ', '.join([name for _, name, _ in ingredients[:3]]) if ingredients else '–Ω–µ—Ç'
    await update.message.reply_text(
        f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {ingredients_count}\n"
        f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {last_three}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=profile_menu(),
        parse_mode='HTML'
    )
