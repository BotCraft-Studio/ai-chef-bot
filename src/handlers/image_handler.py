"""
–ú–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from telegram import Update
from telegram.ext import ContextTypes


# from app.providers.openai_vision import OpenAIVision  # ‚Üê –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–£–ô–¢–ï

async def on_photo(update: Update, _context: ContextTypes.DEFAULT_TYPE) -> None:
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ
    await update.message.reply_text(
        "üì∑ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ç–µ–∫—Å—Ç–æ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é."
    )

    # –°—Ç–∞—Ä—ã–π –∫–æ–¥ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)
    """
    photo = update.message.photo[-1]
    file = await context.bot.get_file(photo.file_id)
    bio = io.BytesIO()
    await file.download(out=bio)
    img = Image.open(io.BytesIO(bio.getvalue())).convert("RGB")

    out = io.BytesIO()
    img.thumbnail((1280, 1280))
    img.save(out, format="JPEG", quality=85)

    ai = OpenAIVision()
    ingredients = await ai.parse_ingredients(out.getvalue())
    if not ingredients:
        return await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")

    storage.add_ingredients(update.effective_user.id, ingredients)
    reply = await ai.recipe_with_macros(ingredients)
    await update.message.reply_text("üìã –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: " + ", ".join(ingredients) + "\n\n" + reply)
    """
